# General router settings

/system identity
  set name=ragnarok
/system clock
  set time-zone-name=Europe/Zurich
#/ip address
#  add interface=ether1 address=192.168.100.2/24
/ip route
  remove [ find where static ]
  add gateway=192.168.100.1
/ip dns
  set servers=8.8.8.8,8.8.4.4
/ip cloud
  set ddns-enabled=yes
/ip service
  set telnet disabled=yes
  set ftp disabled=yes
  set api disabled=yes
  set api-ssl disabled=yes
  set www disabled=yes
/ip ssh
  set always-allow-password-login=no strong-crypto=yes forwarding-enabled=local
/tool mac-server
  set allowed-interface-list=none
  ping set enabled=no

/system script
  remove [ find ]
  add name=auto-upgrade source=\
    "/system package update\r\n\
    check-for-updates once\r\n\
    :delay 3s;\r\n\
    :if ([ get status ] = \"New version is available\") do={ install }"
/system scheduler
  remove [ find ]
  add name=auto-upgrade start-time=12:00:00 interval=7d on-event=auto-update

# Wireless

/interface wireless security-profiles
  remove [ find default=no ]
  set [ find default=yes ] \
    mode=dynamic-keys unicast-ciphers=aes-ccm group-ciphers=aes-ccm \
    authentication-types=wpa2-psk wpa2-pre-shared-key="{{ wifi_password }}"
  add name=guest \
    mode=dynamic-keys unicast-ciphers=aes-ccm group-ciphers=aes-ccm \
    authentication-types=wpa2-psk wpa2-pre-shared-key="{{ guest_wifi_password }}"

/interface wireless
  :local guestWiFiDisabled yes
  :if ([ :len [ find name=wlan3 disabled=no ] ] > 0) do={ :set guestWiFiDisabled no }
  remove [ find where interface-type=virtual ]

  set [ find default-name=wlan1 ] \
    disabled=no ssid=ragnarok mode=ap-bridge security-profile=default \
    band=2ghz-b/g/n channel-width=20/40mhz-XX frequency=auto \
    country=switzerland installation=indoor wps-mode=disabled
  set [ find default-name=wlan2 ] \
    disabled=no ssid=ragnarok5 mode=ap-bridge security-profile=default \
    band=5ghz-a/n/ac channel-width=20/40/80mhz-Ceee frequency=auto \
    country=switzerland installation=indoor wps-mode=disabled

  add name=wlan3 master-interface=wlan2 disabled=$guestWiFiDisabled \
    ssid=perkunas security-profile=guest

/interface bridge
  remove [ find ]
  add name=bridge1

/interface bridge port
  remove [ find ]
  add bridge=bridge1 interface=ether1
  add bridge=bridge1 interface=wlan1
  add bridge=bridge1 interface=wlan2
  add bridge=bridge1 interface=wlan3

# DHCP

/ip pool
  remove [ find ]
  add name=dhcp-pool ranges=192.168.100.100-192.168.100.254
/ip dhcp-server
  remove [ find ]
  add name=default address-pool=dhcp-pool interface=bridge1 disabled=no
/ip dhcp-server network
  remove [ find ]
  add address=192.168.100.0/24 dns-server=8.8.8.8,8.8.4.4 \
    gateway=192.168.100.1 netmask=24
/ip dhcp-client
  remove [ find ]

# Firewall & NAT

/interface list
  remove [ find where !builtin ]
  add name=LAN
/interface list member
  remove [ find ]
  add list=LAN interface=bridge
  add list=LAN interface=ether1

/ip firewall filter
  remove [ find where !dynamic ]
  add chain=input comment="[INPUT] accept: state related" \
    connection-state=established,related,untracked action=accept
  add chain=input comment="[INPUT] drop: state invalid" \
    connection-state=invalid action=drop
  add chain=input comment="[INPUT] accept: protocol ICMP" \
    protocol=icmp action=accept
  add chain=input comment="[INPUT] accept: ssh" \
    protocol=tcp dst-port=22 action=accept
#  add chain=input comment="[INPUT] accept: pptp vpn" \
#    protocol=tcp dst-port=1723 connection-state=new action=accept
  add chain=input comment="[INPUT] accept: local network" \
    src-address=192.168.0.0/16 action=accept
  add chain=input comment="[INPUT] drop" \
    action=drop
#  add chain=input comment="[INPUT] drop: not from LAN" \
#    in-interface-list=!LAN action=drop

  add chain=forward comment="[FORWARD]: fasttrack" \
    connection-state=established,related action=fasttrack-connection
  add chain=forward comment="[FORWARD] accept: state related" \
    connection-state=established,related,untracked action=accept
  add chain=forward comment="[FORWARD] drop: state invalid" \
    connection-state=invalid action=drop
#  add chain=forward comment="[FORWARD] drop: from WAN not DSTNATed"
#    connection-nat-state=!dstnat connection-state=new in-interface-list=WAN  action=drop

/ip firewall nat
  remove [ find ]
#  add chain=srcnat comment="[SRCNAT]: masquerade"\
#    out-interface-list=WAN action=masquerade
#  add chain=srcnat comment="[SRCNAT]: hair pin" \
#    src-address=192.168.100.0/24 dst-address=192.168.100.0/24
#    out-interface-list=LAN action=masquerade
{#
{% for rule in port_forwarding %}
  add chain=dstnat comment="{{ rule.comment }}" \
    protocol={{ rule.protocol }} dst-port={{ rule.port }} \
    to-addresses={{ rule.address }} to-ports={{ rule.port }} \
    action=dst-nat
{% endfor %}
#}

# Access control

/ip kid-control
  remove [ find ]
  add name=Marija mon=8h-21h tue=8h-21h wed=8h-21h thu=8h-21h fri=8h-21h sat=9h-21h sun=9h-20h
  add name=Kotryna mon=8h-21h tue=8h-21h wed=8h-21h thu=8h-21h fri=8h-21h sat=9h-21h sun=9h-20h
/ip kid-control device
  remove [ find ]
  add user=Marija name="Marijos iPad" mac-address=78:67:D7:B6:78:B7
  add user=Kotryna name="Kotrynos iPad" mac-address=78:67:D7:B4:58:18
